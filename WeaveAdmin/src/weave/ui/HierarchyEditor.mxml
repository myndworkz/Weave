<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:mx="http://www.adobe.com/2006/mxml"
                xmlns:ui="weave.ui.*"
                xmlns:aci="weave.services.beans.*"
                xmlns="weave.ui.*"
                label="Hierarchy Editor"
                creationComplete="handleCreated()">
    <mx:VBox height="100%" width="40%">
        <mx:Label text="Tables"/>
        <ui:EntityTree id="tableTree" entityType="{AttributeColumnInfo.ENTITY_TABLE}"
            width="100%" height="100%" dragEnabled="true" dragMoveEnabled="false" dropEnabled="false"/>
        <mx:HBox width="100%">
            <mx:Button label="Import Table..." click="importTable()"/>
            <mx:Button label="Delete Table" click="deleteTable()" enabled="{tableTree.selectedType == AttributeColumnInfo.ENTITY_TABLE}"/>
        </mx:HBox>
    </mx:VBox>
    <mx:VBox height="100%" width="60%">
        <mx:Label text="Custom Hierarchy"/>
        <ui:EntityTree id="tagTree" entityType="{AttributeColumnInfo.ENTITY_CATEGORY}" 
            width="100%" height="100%" 
            dragEnabled="true" dragMoveEnabled="true" dropEnabled="true"/>
        <mx:HBox>
            <ui:TextInputWithPrompt id="tagNameInput" prompt="New tag name" width="100%"/>
            <mx:Button label="Add Tag" click="addTag(tagNameInput.text)"/>
            <mx:Button label="Remove" click="remove()" enabled="{tagTree.selectedType != -1}"/>
        </mx:HBox>
    </mx:VBox>
<mx:Script>
<![CDATA[
	import mx.binding.utils.ChangeWatcher;
	import mx.events.ListEvent;
	import mx.events.PropertyChangeEvent;
	
	import weave.core.UIUtils;
	import weave.services.AdminInterface;
	import weave.services.addAsyncResponder;
	import weave.services.beans.AttributeColumnInfo;
	import weave.utils.PopUpUtils;

    [Bindable] public var selectedItem:EntityTreeNode;
    public function handleCreated():void
    {
        tableTree.addEventListener(ListEvent.CHANGE, selectionsChanged);
        tagTree.addEventListener(ListEvent.CHANGE, selectionsChanged);
    }
    public function importTable():void
    {
        /* Pop up table import wizard */
    }
    public function deleteTable():void
    {
        var item:EntityTreeNode = tableTree.selectedItem as EntityTreeNode;
        PopUpUtils.confirm(this, "Delete Table", "Delete selected table? All data columns in this table will also be deleted from all associated tags.", deleteTableFunction, null, "Delete", "Keep")
        function deleteTableFunction():void
        {
            item.remove_self();
            /* A table deletion will also incur a deletion of all of its data columns, which could reside in any tag. Therefore, we should invalidate the entire metadata cache. */
            AdminInterface.instance.meta_cache.invalidateRoot();
            tableTree.reload();
            tagTree.reload();
            tagTree.invalidateList();
            tagTree.validateNow();
            return;
        }
        /* Pop up confirmation, then delete table. */ 
    }
    public function addTag(name:String):void
    {
        if (!name)
        {
            UIUtils.componentPulse(tagNameInput);
            return;
        }
        /*
        var meta:Object = {};
        meta["public"] = {title: name};
        */
        function finish_add_tag(..._):void
        {
            tagNameInput.text = "";
            tagTree.reload();
        };
        addAsyncResponder(AdminInterface.instance.meta_cache.add_tag_and_fetch(name), finish_add_tag);
        
    }
    public function selectionsChanged(event:ListEvent):void
    {
        var item:EntityTreeNode = event.currentTarget.selectedItem as EntityTreeNode;
        if (item == null) return;
        this.selectedItem = item;
        if (event.currentTarget == tagTree) 
            tableTree.selectedItem = null;
        else 
            tagTree.selectedItem = null;

        var parent:EntityTreeNode = event.currentTarget.getParentItem(item);
        if (parent)
			weaveTrace("Parent: " + parent.label); 
    }
    public function remove():void
    {
        /* These behaviours kinda suck, just using these til someone comes up with something better. */
        var item:EntityTreeNode = tagTree.selectedItem as EntityTreeNode;
        if (item == null) return;
        var entity_type:int = item.object.entity_type;
        var parent:EntityTreeNode = tagTree.getParentItem(item);
        if (parent)
        {
            parent.remove_child(item.id);

            tagTree.validateNow();
        }
        else 
        {
            if (entity_type == AttributeColumnInfo.ENTITY_CATEGORY)
            {
                PopUpUtils.confirm(this, "Delete Tag", "Delete tag \"" + item.label + "\"?", deleteTagFunction, null, "Delete", "Keep")
                // TODO: Add confirmation dialog
                function deleteTagFunction():void
                {
                    // TODO: Regenerate the list.
                    tagTree.etn_root.remove_child(item.id);
                    item.remove_self();
                    tagTree.reload();
                }
            }
            else
            {
                // TODO: Add error, as this should never happen.
            }
        }
    }
]]>
</mx:Script>
</mx:HDividedBox>
