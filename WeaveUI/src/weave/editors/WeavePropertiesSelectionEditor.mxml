<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:VBox xmlns="weave.editors.*" 
		 xmlns:mx="http://www.adobe.com/2006/mxml" 
		 xmlns:ui="weave.ui.*"
		 width="100%" 
		 height="100%">
	<mx:HBox>
		<mx:Label text="{lang('Selection Mode')}"/>
		<mx:ComboBox 
				 id="circularSelectionCheckbox"
				 dataProvider="{InteractionController.enumSelectionMode()}"
				 creationComplete="linkBindableProperty(Weave.properties.selectionMode, event.target, 'text')"/>
	</mx:HBox>
	<mx:HBox>
		<mx:CheckBox label='{lang("Show \"Selected Records\" tooltip")}'
					 id="showSelectedRecordsText"
					 selected="true"
					 creationComplete="linkBindableProperty(Weave.properties.showSelectedRecordsText, event.target, 'selected')"/>
		<ui:CustomComboBox id="recordsTooltip" enabled="{showSelectedRecordsText.selected}"
						   toolTip="{lang('Select the location for the selected records tooltip')}"/>
	</mx:HBox>
	<mx:CheckBox toolTip="{lang('Check this box to enable bitmap filters used when probing or selecting')}"
				 id="enableBitmapFilters"
				 label="{lang('Enable extra bitmap filters')}"
				 selected="true"
				 creationComplete="linkBindableProperty(Weave.properties.enableBitmapFilters, event.target, 'selected')"
				 />
	<mx:VBox enabled="{enableBitmapFilters.selected}" paddingLeft="24">			
		<mx:HBox>
			<mx:Label text="{lang('Shadow Color')}" 
					  textAlign="right"
					  toolTip="{lang('Set the shadow color of selected points')}"/>
			<mx:ColorPicker id="shadowColor"
							creationComplete="linkBindableProperty(Weave.properties.selectionDropShadow.color, event.target, 'selectedColor' );"
							/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label text="{lang('Shadow Alpha')}" 
					  textAlign="right"
					  toolTip="{lang('Set the opacity of selected points')}"/>
			<mx:NumericStepper id="shadowAlpha"
							   maximum="1"
							   stepSize="0.1"
							   creationComplete="linkBindableProperty(Weave.properties.selectionDropShadow.alpha, event.target, 'value' );"
							   />
		</mx:HBox>
		
		<mx:HBox>
			<mx:Label text="Unselected Records"
					  width = "200"
					  textAlign="right"
					  toolTip = "Set the opacity of the unselected points"/>
			<mx:RadioButton groupName="unselected"
							buttonMode="true"
							id="graySelect"
							label="Gray"
							width="50"
							creationComplete="linkBindableProperty(Weave.properties.selectionAlphaAmount,event.target,'selected')"/>
							
			<mx:NumericStepper id="unselectedAlpha"
							   maximum="1"
							   stepSize="0.1"
							   creationComplete="linkBindableProperty(Weave.properties.selectionAlphaAmount, event.target, 'value' );"
							   />
			<mx:RadioButton groupName="unselected"
							buttonMode="true"
							id="noDisplySelect"
							label="Not displayed"
							width="100"
							/>
		
			
		</mx:HBox>
		
		
	</mx:VBox>
	<mx:HBox>
		<mx:Label text="{lang('Selection background alpha')}"
				  textAlign="right"/>
		<mx:NumericStepper id="selectionAlpha"
						   maximum="1"
						   stepSize="0.1"
						   creationComplete="linkBindableProperty(Weave.properties.selectionAlphaAmount, event.target, 'value' );"
						   />
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="{lang('Dashed Lines Parameters')}"
				  toolTip="{lang('Set the values the gaps and lines of the dashed lines')}"/>
		<mx:TextInput id="dashedLinesString"
					  creationComplete="linkBindableProperty(Weave.properties.dashedSelectionBox, event.target, 'text' );"
					  />
		<mx:Canvas id="dashedCanvas"
				   width="200"
				   height="{dashedLinesString.height}"
				   />
	</mx:HBox>
	<mx:Script>
		<![CDATA[
			import com.cartogrammar.drawing.DashedLine;
			
			import weave.Weave;
			import weave.api.linkBindableProperty;
			import weave.visualization.layers.InteractionController;
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				
				recordsTooltip.dataProvider = Weave.properties.recordsTooltipEnum ;
				linkBindableProperty( Weave.properties.recordsTooltipLocation, recordsTooltip, 'selectedItem');
				
				Weave.properties.dashedSelectionBox.addGroupedCallback(this, drawDashedLinePreview, true);
			}
			
			private const _dashedLine:DashedLine = new DashedLine();
			private function drawDashedLinePreview():void
			{
				_dashedLine.graphics = dashedCanvas.graphics;
				_dashedLine.lengthsString = Weave.properties.dashedSelectionBox.value;
				_dashedLine.clear();
				_dashedLine.lineStyle(4, 0x00ff00, 1);

				var xStart:Number = 5;
				var yStart:Number = 10;
				var xEnd:Number = dashedCanvas.width - 5;
				var yEnd:Number = yStart;
				_dashedLine.moveTo(xStart, yStart);
				_dashedLine.lineTo(xEnd, yEnd);
			}
		]]>
	</mx:Script>
</mx:VBox>